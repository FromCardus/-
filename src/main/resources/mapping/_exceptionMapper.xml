<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="extractor.DAO.mapper._exceptionMapper">
  <resultMap id="BaseResultMap" type="extractor.model._exception">
    <id column="ExceptionID" jdbcType="INTEGER" property="exceptionid" />
    <result column="Name" jdbcType="VARCHAR" property="name" />
    <result column="Type" jdbcType="VARCHAR" property="type" />
    <result column="CommunicationchannelID" jdbcType="INTEGER" property="communicationchannelid" />
    <result column="FaultmitigationID" jdbcType="INTEGER" property="faultmitigationid" />
    <result column="FaultdetectiionID" jdbcType="INTEGER" property="faultdetectiionid" />
    <result column="RequirementID" jdbcType="INTEGER" property="requirementid" />
    <result column="StateID" jdbcType="INTEGER" property="stateid" />
    <result column="TaskID" jdbcType="INTEGER" property="taskid" />
    <result column="SyncinterfaceID" jdbcType="INTEGER" property="syncinterfaceid" />
    <result column="ShareddataaccessID" jdbcType="INTEGER" property="shareddataaccessid" />
  </resultMap>
  <sql id="Base_Column_List">
    ExceptionID, Name, Type, CommunicationchannelID, FaultmitigationID, FaultdetectiionID, 
    RequirementID, StateID, TaskID, SyncinterfaceID, ShareddataaccessID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exception
    where ExceptionID = #{exceptionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exception
    where ExceptionID = #{exceptionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="extractor.model._exception">
    insert into exception (ExceptionID, Name, Type, 
      CommunicationchannelID, FaultmitigationID, 
      FaultdetectiionID, RequirementID, StateID, 
      TaskID, SyncinterfaceID, ShareddataaccessID
      )
    values (#{exceptionid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{communicationchannelid,jdbcType=INTEGER}, #{faultmitigationid,jdbcType=INTEGER}, 
      #{faultdetectiionid,jdbcType=INTEGER}, #{requirementid,jdbcType=INTEGER}, #{stateid,jdbcType=INTEGER}, 
      #{taskid,jdbcType=INTEGER}, #{syncinterfaceid,jdbcType=INTEGER}, #{shareddataaccessid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="extractor.model._exception">
    insert into exception
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="exceptionid != null">
        ExceptionID,
      </if>
      <if test="name != null">
        Name,
      </if>
      <if test="type != null">
        Type,
      </if>
      <if test="communicationchannelid != null">
        CommunicationchannelID,
      </if>
      <if test="faultmitigationid != null">
        FaultmitigationID,
      </if>
      <if test="faultdetectiionid != null">
        FaultdetectiionID,
      </if>
      <if test="requirementid != null">
        RequirementID,
      </if>
      <if test="stateid != null">
        StateID,
      </if>
      <if test="taskid != null">
        TaskID,
      </if>
      <if test="syncinterfaceid != null">
        SyncinterfaceID,
      </if>
      <if test="shareddataaccessid != null">
        ShareddataaccessID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="exceptionid != null">
        #{exceptionid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="communicationchannelid != null">
        #{communicationchannelid,jdbcType=INTEGER},
      </if>
      <if test="faultmitigationid != null">
        #{faultmitigationid,jdbcType=INTEGER},
      </if>
      <if test="faultdetectiionid != null">
        #{faultdetectiionid,jdbcType=INTEGER},
      </if>
      <if test="requirementid != null">
        #{requirementid,jdbcType=INTEGER},
      </if>
      <if test="stateid != null">
        #{stateid,jdbcType=INTEGER},
      </if>
      <if test="taskid != null">
        #{taskid,jdbcType=INTEGER},
      </if>
      <if test="syncinterfaceid != null">
        #{syncinterfaceid,jdbcType=INTEGER},
      </if>
      <if test="shareddataaccessid != null">
        #{shareddataaccessid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="extractor.model._exception">
    update exception
    <set>
      <if test="name != null">
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        Type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="communicationchannelid != null">
        CommunicationchannelID = #{communicationchannelid,jdbcType=INTEGER},
      </if>
      <if test="faultmitigationid != null">
        FaultmitigationID = #{faultmitigationid,jdbcType=INTEGER},
      </if>
      <if test="faultdetectiionid != null">
        FaultdetectiionID = #{faultdetectiionid,jdbcType=INTEGER},
      </if>
      <if test="requirementid != null">
        RequirementID = #{requirementid,jdbcType=INTEGER},
      </if>
      <if test="stateid != null">
        StateID = #{stateid,jdbcType=INTEGER},
      </if>
      <if test="taskid != null">
        TaskID = #{taskid,jdbcType=INTEGER},
      </if>
      <if test="syncinterfaceid != null">
        SyncinterfaceID = #{syncinterfaceid,jdbcType=INTEGER},
      </if>
      <if test="shareddataaccessid != null">
        ShareddataaccessID = #{shareddataaccessid,jdbcType=INTEGER},
      </if>
    </set>
    where ExceptionID = #{exceptionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="extractor.model._exception">
    update exception
    set Name = #{name,jdbcType=VARCHAR},
      Type = #{type,jdbcType=VARCHAR},
      CommunicationchannelID = #{communicationchannelid,jdbcType=INTEGER},
      FaultmitigationID = #{faultmitigationid,jdbcType=INTEGER},
      FaultdetectiionID = #{faultdetectiionid,jdbcType=INTEGER},
      RequirementID = #{requirementid,jdbcType=INTEGER},
      StateID = #{stateid,jdbcType=INTEGER},
      TaskID = #{taskid,jdbcType=INTEGER},
      SyncinterfaceID = #{syncinterfaceid,jdbcType=INTEGER},
      ShareddataaccessID = #{shareddataaccessid,jdbcType=INTEGER}
    where ExceptionID = #{exceptionid,jdbcType=INTEGER}
  </update>
</mapper>